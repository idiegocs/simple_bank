# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

     # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dics
          POSTGRES_DB: simple_bank
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    
    steps:
    - name: bajar depen
      run:  curl -s https://packagecloud.io/install/repositories/golang-migrate/migrate/script.deb.sh | sudo bash

    - name: update ubuntu 
      run: sudo apt-get update

    - name: Install migration
      run: sudo apt-get -y install migrate

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.21.4'
      id: go
    
    - name: check out code into the module directory
      uses: actions/checkout@v2
    
    - name: Install dependencies
      run: go get .

    - name: Run Migrations
      run: migration init

    - name: Test
      run: go test ./...